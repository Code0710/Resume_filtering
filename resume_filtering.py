# -*- coding: utf-8 -*-
"""Resume filtering

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1twHtwCjhH5HDItuwtB4j5Jtl_O2uUPoZ
"""

import csv

def load_dataset(filename):
    dataset = []
    with open(filename, 'r') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            dataset.append(row)
    return dataset

def extract_numeric_value(value):
    numeric_part = value.split('/')[0]  # Extract the numeric part before '/'
    return float(numeric_part)

def select_best_candidates(dataset):
    # Define your criteria here
    selected_candidates = []
    for candidate in dataset:
        python_score = int(candidate['Python (out of 3)'])
        ml_score = int(candidate['Machine Learning (out of 3)'])
        nlp_score = int(candidate['Natural Language Processing (NLP) (out of 3)'])
        dl_score = int(candidate['Deep Learning (out of 3)'])
        degrees = candidate['Degree'].split(',')  # Split multiple degrees into a list
        graduation_year = int(candidate['Current Year Of Graduation'])
        performance_pg = candidate['Performance_PG']
        performance_ug = candidate['Performance_UG']
        performance_12 = candidate['Performance_12']
        performance_10 = candidate['Performance_10']

        # Check for missing or invalid values
        if performance_pg == 'N/A' or performance_ug == 'N/A' or performance_12 == 'N/A' or performance_10 == 'N/A':
            continue

        performance_pg = extract_numeric_value(performance_pg)
        performance_ug = extract_numeric_value(performance_ug)
        performance_12 = extract_numeric_value(performance_12)
        performance_10 = extract_numeric_value(performance_10)

        # Add your filtering criteria here
        if python_score >= 2 and ml_score >= 2 and nlp_score >= 2 and dl_score >= 2 and \
           any(degree.strip() in ['B.A', 'B.E Computer Science and Engineering (Artificial Intelligence and machine Learning)', 'B.Sc', 'B.sc(chem)', 'B.Tech',
                                  'B.Tech (CSE) with specialization in Cyber Security', 'B.Tech (Hons.)', 'Bachelor of Artificial Intelligence']
               for degree in degrees) and \
           graduation_year == 2022 and performance_pg >= 7.0 and performance_ug >= 7.0 and \
           performance_12 >= 60.0 and performance_10 >= 60.0:
            selected_candidates.append(candidate)

    return selected_candidates

def save_candidates_to_csv(candidates, filename):
    fieldnames = candidates[0].keys() if candidates else []
    with open(filename, 'w', newline='') as csvfile:
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()
        writer.writerows(candidates)

# Load dataset from CSV
dataset = load_dataset('candidates.csv')

# Select the best candidates based on criteria
best_candidates = select_best_candidates(dataset)

# Save the selected candidates to a new CSV file
save_candidates_to_csv(best_candidates, 'best_candidates.csv')